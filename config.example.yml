# Название события на Cosplay2
event_name: 'cr2018'

# Путь к файлу базы SQLite
db_path: 'cr2018/sqlite3_data.db'

# Логин и пароль админа cosplay2
admin_cs2_name: 'login'
admin_cs2_password: 'password'  # Необязательно

# SQL-запрос для выполнения сразу после загрузки базы
sql_after_get: >
  SELECT * FROM settings WHERE key != 'design'



### get-scene-files.py, get-exhibition-fotos.py ###

# Путь к папке с файлами
folder_path: 'cr2018'




### get-scene-files.py ###

# Пропускать эти поля при скачивании всех файлов
not_scene_files:
    - 'Видеозапись репетиции'
    - 'Фотография'
    - 'Демо-запись'
    - 'Оригинальная композиция'




### get-exhibition-fotos.py ###

# Печатать только одну фото или все
use_main_foto: false

# Внесценические номинации, которые надо печатать
print_noms:
    - 'Арт'
    - 'Фан-арт'
    - 'Фотокосплей'

# Название фото из профиля, которое печатать
print_title: 'Какую фотографию печатать?'






### mktex.py ###

# Финальный прогон или тестовый?
# Если true, то номера берутся из номеров карточек
# Если false, то из номеров заявок (котрые со знаком № и уникальные)
production: false

# Путь к images.tex
tex_path: 'cr2018/images.tex'


city_field: "Ваши данные.Город"

# Название работы
name_fields:
    - 'Изображения.Название работы'
    - 'О работе.Название работы'
    - 'Выступление.Название выступления'
    - 'Выступление.Персонаж (как пишется)'
    - 'Выступление.Персонажи (как пишутся)'
    - 'Выступление.Название песни'
    - 'Выступление.Название танца'
    - 'Ваши данные.Персонаж'

# Фандом
fandom_fields:
    - 'Выступление.Откуда персонаж'
    - 'Выступление.Откуда персонажи'
    - 'Ваши данные.Откуда персонаж'
    - 'Общая информация.Фандом'

# Автор работы
author_fields:
    - 'Выступление.Название команды'
    - 'Ваши данные.Название команды'
    - 'Ваши данные.Отображаемое всем имя'

# Поля других авторов (фотографы)
other_authors_fields:
    - 'Ваши данные.Другие авторы работы'

# Что скачивать
media_fields:
    - 'Картинка для проектора.Видео для показа на проекторе'
    - 'Картинка для проектора.Картинка для показа на проекторе'
    - 'Картинка для проектора.Фоновый аудиотрек'
    - 'Медиафайлы.Видео для показа на проекторе'
    - 'Медиафайлы.Картинка для показа на проекторе'
    - 'Медиафайлы.Фоновый аудиотрек'
    - 'О работе.Ссылка на видео'
    - 'Изображения.Изображение'

# Дополнительно
extra_fields:
    - 'Изображения.Техника исполнения'




### checker.py ###

id_regex: '^№ (\d{1,3})\. (.*)\.\w{2,4}$'
code_regex: '(\d{3}) (\w{1,2})\. (.*?)\(№(\d{1,3})\)'

# Путь к папке проекта FestEngine
festengine_path: 'festengine'




### SQL ###
# SQl проверки всех файлов
checker_sql: >
 SELECT card_code, voting_number, number, value, voting_title, requests.id
 FROM   requests, list
 LEFT JOIN (SELECT request_id, value FROM [values] WHERE title IN ('Номинация', 'Тип номера'))
    ON request_id = requests.id
 WHERE list.id = topic_id AND
    status = 'approved' AND
    card_code NOT IN ("FG", "A", "F");

# Изображения в формате JPG/PNG или PDF
image_pdf: false
